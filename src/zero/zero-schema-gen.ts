/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero  ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/BriefHQ/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { default as DrizzleConfigSchema } from "./drizzle-zero.config";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    messagesTable: {
      name: "messagesTable",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messagesTable"]["columns"]["id"]["customType"],
        },
        threadId: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messagesTable"]["columns"]["threadId"]["customType"],
          serverName: "thread_id",
        },
        type: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messagesTable"]["columns"]["type"]["customType"],
        },
        content: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messagesTable"]["columns"]["content"]["customType"],
        },
        order: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messagesTable"]["columns"]["order"]["customType"],
        },
        createdAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messagesTable"]["columns"]["createdAt"]["customType"],
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messagesTable"]["columns"]["updatedAt"]["customType"],
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
      serverName: "messages",
    },
    threadsTable: {
      name: "threadsTable",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["threadsTable"]["columns"]["id"]["customType"],
        },
        title: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["threadsTable"]["columns"]["title"]["customType"],
        },
        createdAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["threadsTable"]["columns"]["createdAt"]["customType"],
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["threadsTable"]["columns"]["updatedAt"]["customType"],
        },
      },
      primaryKey: ["id"],
      serverName: "threads",
    },
  },
  relationships: {},
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
